// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms
//                              | |
//  _ __   __ _ ___ ___  ___  __| |
// | '_ \ / _` / __/ __|/ _ \/ _` |
// | |_) | (_| \__ \__ \  __/ (_| |
// | .__/ \__,_|___/___/\___|\__,_|
// | |
// |_|
pub fn p002(limit: u64) -> u64 {
    let mut sum: u64 = 0;
    let mut prev: u64 = 1;
    let mut next: u64 = 2;
    while next < limit {
        if next % 2 == 0 {
            sum = sum + next
        }
        let temp: u64 = prev;
        prev = next;
        next = next + temp;
    }
    sum
}

#[test]
fn test_p002() {
    assert_eq!(44, p002(50));
    println!("{}", p002(4000000));
}
//                                                                     88
//                                                                     88
// 8b,dPPYba,   ,adPPYYba,  ,adPPYba,  ,adPPYba,   ,adPPYba,   ,adPPYb,88
// 88P'    "8a  ""     `Y8  I8[    ""  I8[    ""  a8P_____88  a8"    `Y88
// 88       d8  ,adPPPPP88   `"Y8ba,    `"Y8ba,   8PP"""""""  8b       88
// 88b,   ,a8"  88,    ,88  aa    ]8I  aa    ]8I  "8b,   ,aa  "8a,   ,d88
// 88`YbbdP"'   `"8bbdP"Y8  `"YbbdP"'  `"YbbdP"'   `"Ybbd8"'   `"8bbdP"Y8
// 88
// 88
//  ██▓███   ▄▄▄        ██████   ██████ ▓█████ ▓█████▄
// ▓██░  ██▒▒████▄    ▒██    ▒ ▒██    ▒ ▓█   ▀ ▒██▀ ██▌
// ▓██░ ██▓▒▒██  ▀█▄  ░ ▓██▄   ░ ▓██▄   ▒███   ░██   █▌
// ▒██▄█▓▒ ▒░██▄▄▄▄██   ▒   ██▒  ▒   ██▒▒▓█  ▄ ░▓█▄   ▌
// ▒██▒ ░  ░ ▓█   ▓██▒▒██████▒▒▒██████▒▒░▒████▒░▒████▓
// ▒▓▒░ ░  ░ ▒▒   ▓▒█░▒ ▒▓▒ ▒ ░▒ ▒▓▒ ▒ ░░░ ▒░ ░ ▒▒▓  ▒
// ░▒ ░       ▒   ▒▒ ░░ ░▒  ░ ░░ ░▒  ░ ░ ░ ░  ░ ░ ▒  ▒
// ░░         ░   ▒   ░  ░  ░  ░  ░  ░     ░    ░ ░  ░
//                ░  ░      ░        ░     ░  ░   ░
//                                              ░
